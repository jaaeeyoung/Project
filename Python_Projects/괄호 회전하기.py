'''
=======================================================================================================================================
+ 문제 +
=======================================================================================================================================
괄호 회전하기 ☆☆
=======================================================================================================================================
+ 문제 설명 +
=======================================================================================================================================
' 다음 규칙을 지키는 문자열을 올바른 괄호 문자열이라고 정의합니다.
' (), [], {} 는 모두 올바른 괄호 문자열입니다.
' 만약 A가 올바른 괄호 문자열이라면, (A), [A], {A} 도 올바른 괄호 문자열입니다. 예를 들어, [] 가 올바른 괄호 문자열이므로, ([]) 도 올바른 
  괄호 문자열입니다.
' 만약 A, B가 올바른 괄호 문자열이라면, AB 도 올바른 괄호 문자열입니다. 예를 들어, {} 와 ([]) 가 올바른 괄호 문자열이므로, {}([]) 도 올바른
  괄호 문자열입니다.
' 대괄호, 중괄호, 그리고 소괄호로 이루어진 문자열 s가 매개변수로 주어집니다. 이 s를 왼쪽으로 x (0 ≤ x < (s의 길이)) 칸만큼 회전시켰을 때 s가
  올바른 괄호 문자열이 되게 하는 x의 개수를 return 하도록 solution 함수를 완성해주세요.
=======================================================================================================================================
+ 제한 사항 +
=======================================================================================================================================
' s의 길이는 1 이상 1,000 이하입니다.
=======================================================================================================================================
+ 입출력 예 +
=======================================================================================================================================
s	        result
"[](){}"	3
"}]()[{"	2
"[)(]"	    0
"}}}"	    0
=======================================================================================================================================
+ 입출력 예 설명 +
=======================================================================================================================================
' 입출력 예 #1

다음 표는 "[](){}" 를 회전시킨 모습을 나타낸 것입니다.
x	s를 왼쪽으로 x칸만큼 회전	올바른 괄호 문자열?
0	"[](){}"	O
1	"](){}["	X
2	"(){}[]"	O
3	"){}[]("	X
4	"{}[]()"	O
5	"}[](){"	X
올바른 괄호 문자열이 되는 x가 3개이므로, 3을 return 해야 합니다.

' 입출력 예 #2

다음 표는 "}]()[{" 를 회전시킨 모습을 나타낸 것입니다.
x	s를 왼쪽으로 x칸만큼 회전	올바른 괄호 문자열?
0	"}]()[{"	X
1	"]()[{}"	X
2	"()[{}]"	O
3	")[{}]("	X
4	"[{}]()"	O
5	"{}]()["	X
올바른 괄호 문자열이 되는 x가 2개이므로, 2를 return 해야 합니다.

' 입출력 예 #3

s를 어떻게 회전하더라도 올바른 괄호 문자열을 만들 수 없으므로, 0을 return 해야 합니다.

' 입출력 예 #4

s를 어떻게 회전하더라도 올바른 괄호 문자열을 만들 수 없으므로, 0을 return 해야 합니다.
※ 공지 - 2021년 4월 16일 테스트케이스가 추가되었습니다.
=======================================================================================================================================
+ 수정 기록 +
=======================================================================================================================================
' 2021-09-23-THU : 문제 파악
                   Test 1 ~ 10 실패
                   완성
=======================================================================================================================================
'''

def solution(s):

    # 문자열 List로 변환
    s = list(s)
    # 답
    answer = 0
    # s를 회전시킨 List를 담을 변수
    temp = []

    # s 회전
    for i in range(len(s)):
        temp = s[i:]
        for j in range(0, i):
            temp.append(s[j])

        # 여는 괄호 담을 변수
        open = []
        # break일 때 flag = 1
        flag = 0
        for j in temp:
            # 여는 괄호인 경우
            if j == '(' or j == '[' or j == '{':
                # open에 추가
                open.append(j)

            # 닫는 괄호인 경우
            else:
                # open이 비어있다면
                if not open:
                    flag = 1
                    # break
                    break
                # open이 비어있지 않은 경우
                else:
                    # 닫는 괄호가 ) 이면
                    if j == ')':
                        # open의 마지막 원소가 ( 인 경우
                        if open[-1] == '(':
                            # open에서 해당 여는 괄호 삭제
                            del open[-1]
                        # open의 마지막 원소가 ( 가 아니라면
                        else:
                            flag = 1
                            # break
                            break
                    # 닫는 괄호가 } 라면
                    elif j == '}':
                        # open의 마지막 원소가 { 인 경우
                        if open[-1] == '{':
                            # open에서 해당 여는 괄호 삭제
                            del open[-1]
                        # open의 마지막 원소가 { 가 아니라면
                        else:
                            flag = 1
                            # break
                            break
                    # 닫는 괄호가 ] 라면
                    else:
                        # open의 마지막 원소가 [ 인 경우
                        if open[-1] == '[':
                            # open에서 해당 여는 괄호 삭제
                            del open[-1]
                        # open의 마지막 원소가 {가 아니라면
                        else:
                            flag = 1
                            # break
                            break

        # break되지 않고 open이 빈 List라면
        if flag == 0 and not open:
            # answer에 1추가
            answer += 1

    return answer

#print(solution("[]")) # 1
print(solution("[](){}")) # 3
#print(solution("}]()[{")) # 2
#print(solution("[)(]")) # 0
#print(solution("}}}")) # 0
#print(solution("{{{}")) # 0
#print(solution("{}}}")) # 0
#print(solution("({[]})}{")) # 1
#print(solution("(){[()]}][")) # 1
#print(solution("[(])")) # 0
#print(solution("([{)}]")) # 0